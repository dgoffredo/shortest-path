# Generate header dependencies during compilation preprocessing.
CPPFLAGS = -MMD
# the usual...
CXXFLAGS = --std=c++20 -O2 -Wall -Wextra -pedantic -Werror

EXAMPLES = simple complex dupey random

.PHONY: all
all: $(addprefix examples/,$(EXAMPLES:=.svg) $(EXAMPLES:=.dot))

.PHONY: clean
clean:
	rm -f shortestpath.d shortestpath.o shortestpath randomgraph
	find examples/ -type f \( -name '*.dot' -o -name '*.svg' \) -delete

examples/random.txt: randomgraph
	RAND_SEED=1337 ./randomgraph >$@

randomgraph: randomgraph.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^

shortestpath: shortestpath.o
	$(CXX) -o $@ $^

%.svg: %.dot
	dot -Tsvg $^ >$@

%.dot: %.txt shortestpath
	./shortestpath <$< >$@

# Include the make targets that were generated by the implicit %.o rule, which
# will invoke the C++ compiler and pass it the CPPFLAGS preprocessor flags,
# which contain the "-MMD" argument, which produces a *.d file that relates
# sources to header files included by them.
-include *.d
